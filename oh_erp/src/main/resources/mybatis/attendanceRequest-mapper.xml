<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	mapper는 구문을 만들 수 있는 영역
	일반적으로 테이블당 1개씩의 mapper를 둔다
	
	- namespace : 영역을 외부에서 부르기 위한 별칭(일반적으로 테이블 이름으로 사용)
 -->
<mapper namespace="attendanceRequest">

<!--
    <insert id="regist" parameterType="com.kh.spring07.entity.StudentDto">
    
    </insert>
    
    또는
   
    <insert id="regist" parameterType="student">
		INSERT INTO student(
			name, age, score, when
		) VALUES(
			#{name}, #{age}, #{score}, sysdate
		)
	</insert>
	
	알아야 할 설정값
	- id : 구문을 외부에서 호출하기 위한 식별값
	- parameterType : 구문을 실행하기 위해 필요한 데이터 유형(매개변수와 유사)
	- resultType : 구문이 실행된 결과 유형(반환형과 유사)
-->
	<!-- 휴가 요청 생성 -->
	<insert id="request" parameterType="map">
		insert into ATTENDANCE_REQUEST values(attendance_request_seq.nextval,#{writer},'휴가 생성 요청',#{requtype},#{cause},#{restartDate},#{refinishDate},'대기중',sysdate)
	</insert>
	
	
	<!-- 요청관리 list -->
	<select id="getList" resultType="attendanceRequestDto" parameterType="map">
		SELECT *FROM attendance_request
			<choose>
				<!-- 날짜가 null이 아니라면 -->
				<when test="startDate!=null and finishDate!=null">
					WHERE(attendance_request_today BETWEEN to_date(#{startDate} || ' ' || '00:00:00'
,'YYYY-MM-DD HH24:MI:SS') AND to_date(#{finishDate} || ' ' || '11:59:59'
,'YYYY-MM-DD HH24:MI:SS'))
					<choose>
						<!-- 검색어가 null이 아니거나 모든요청들이 아니라면 -->
						<when test='type!=null or type!="모든 요청들"'>
							<choose>
								<when test='type=="승인이 필요한 요청들"'>
									and(attendance_request_management='대기중')
								</when>
								<when test='type=="완료된 요청들"'>
									and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
								</when>
							</choose>
						</when>
					</choose>
				</when>
				
				<!-- 날짜가 없다면 -->
				<otherwise>
					<choose>
						<!-- 검색어가 null이 아니거나 모든요청들이 아니라면 -->
						<when test='type!=null or type!="모든 요청들"'>
							<choose>
								<when test='type=="승인이 필요한 요청들"'>
									WHERE attendance_request_management='대기중'
								</when>
								<when test='type=="완료된 요청들"'>
									WHERE attendance_request_management='승인됨' or attendance_request_management='거절됨'
								</when>
							</choose>
						</when>
					</choose>
				</otherwise>
			</choose>
		ORDER BY attendance_request_today DESC
	</select>
	
	<!-- 요청관리 list수정 -->
	<select id="getList2" resultType="memberRequestDto" parameterType="map">
		SELECT ar.ATTENDANCE_REQUEST_NO,ar.MEMBER_CODE ,ar.ATTENDANCE_REQUEST_TYPE ,ar.ATTENDANCE_REQUEST_CONTENT ,ar.ATTENDANCE_REQUEST_CAUSE ,ar.ATTENDANCE_REQUEST_START ,ar.ATTENDANCE_REQUEST_FINISH ,ar.ATTENDANCE_REQUEST_MANAGEMENT ,ar.ATTENDANCE_REQUEST_TODAY ,m.MEMBER_NAME FROM ATTENDANCE_REQUEST ar INNER JOIN MEMBER m ON (m.MEMBER_CODE = ar.MEMBER_CODE)
		WHERE 1=1
		<choose>
			<when test='startDate != null and startDate != "" and finishDate != null and finishDate != ""'>
							and attendance_request_today BETWEEN to_date(#{startDate} || ' ' || '00:00:00'
,'YYYY-MM-DD HH24:MI:SS') AND to_date(#{finishDate} || ' ' || '11:59:59'
,'YYYY-MM-DD HH24:MI:SS')

			<if test='type == "승인이 필요한 요청들"'>
				and(attendance_request_management='대기중')
			</if>
			<if test='type == "완료된 요청들"'>
				and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
			</if>
			</when>
			<otherwise>
				<if test='type == "승인이 필요한 요청들"'>
					and(attendance_request_management='대기중')
				</if>
				<if test='type == "완료된 요청들"'>
					and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
				</if>
			</otherwise>
		</choose>

		
		
		ORDER BY attendance_request_today DESC
	</select>
	
	<!-- 내 요청내역 리스트 -->
		<select id="getMyList" resultType="memberRequestDto" parameterType="map">
		SELECT ar.ATTENDANCE_REQUEST_NO,ar.MEMBER_CODE ,ar.ATTENDANCE_REQUEST_TYPE ,ar.ATTENDANCE_REQUEST_CONTENT ,ar.ATTENDANCE_REQUEST_CAUSE ,ar.ATTENDANCE_REQUEST_START ,ar.ATTENDANCE_REQUEST_FINISH ,ar.ATTENDANCE_REQUEST_MANAGEMENT ,ar.ATTENDANCE_REQUEST_TODAY ,m.MEMBER_NAME FROM ATTENDANCE_REQUEST ar INNER JOIN MEMBER m ON (m.MEMBER_CODE = ar.MEMBER_CODE)
		WHERE 1=1
		<choose>
			<when test='startDate != null and startDate != "" and finishDate != null and finishDate != ""'>
							and attendance_request_today BETWEEN to_date(#{startDate} || ' ' || '00:00:00'
,'YYYY-MM-DD HH24:MI:SS') AND to_date(#{finishDate} || ' ' || '11:59:59'
,'YYYY-MM-DD HH24:MI:SS')

			<if test='type == "승인이 필요한 요청들"'>
				and(attendance_request_management='대기중')
			</if>
			<if test='type == "완료된 요청들"'>
				and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
			</if>
			</when>
			<otherwise>
				<if test='type == "승인이 필요한 요청들"'>
					and(attendance_request_management='대기중')
				</if>
				<if test='type == "완료된 요청들"'>
					and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
				</if>
			</otherwise>
		</choose>
		
		and ar.member_code=#{writer} ORDER BY attendance_request_today DESC
	</select>
	
	<!-- 게시글 수 출력 -->
	<select id="listCnt" resultType="int" parameterType="map">
		SELECT COUNT(*) FROM ATTENDANCE_REQUEST 
		WHERE 1=1
				<choose>
			<when test='startDate != null and startDate != "" and finishDate != null and finishDate != ""'>
							and attendance_request_today BETWEEN to_date(#{startDate} || ' ' || '00:00:00'
,'YYYY-MM-DD HH24:MI:SS') AND to_date(#{finishDate} || ' ' || '11:59:59'
,'YYYY-MM-DD HH24:MI:SS')

			<if test='type == "승인이 필요한 요청들"'>
				and(attendance_request_management='대기중')
			</if>
			<if test='type == "완료된 요청들"'>
				and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
			</if>
			</when>
			<otherwise>
				<if test='type == "승인이 필요한 요청들"'>
					and(attendance_request_management='대기중')
				</if>
				<if test='type == "완료된 요청들"'>
					and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
				</if>
			</otherwise>
		</choose>
		
	</select>
	
	
	 <!-- 내 게시글 수 출력 --> 
		<select id="mylistCnt" resultType="int" parameterType="map">
		SELECT COUNT(*) FROM ATTENDANCE_REQUEST 
		WHERE 1=1
				<choose>
			<when test='startDate != null and startDate != "" and finishDate != null and finishDate != ""'>
							and attendance_request_today BETWEEN to_date(#{startDate} || ' ' || '00:00:00'
,'YYYY-MM-DD HH24:MI:SS') AND to_date(#{finishDate} || ' ' || '11:59:59'
,'YYYY-MM-DD HH24:MI:SS')

			<if test='type == "승인이 필요한 요청들"'>
				and(attendance_request_management='대기중')
			</if>
			<if test='type == "완료된 요청들"'>
				and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
			</if>
			</when>
			<otherwise>
				<if test='type == "승인이 필요한 요청들"'>
					and(attendance_request_management='대기중')
				</if>
				<if test='type == "완료된 요청들"'>
					and(attendance_request_management='승인됨' or attendance_request_management='거절됨')
				</if>
			</otherwise>
		</choose>
		and member_code=#{writer}
	</select>
	
	<!-- 승인 버튼 누르면 상태 승인으로 변하게 
	<update id="requestManageYes" parameterType="int">
		update attendance_request SET attendance_request_management='승인됨'
		where attendance_request_no=#{attendance_request_no}
	</update> -->
	
	<!-- 승인 /거절 버튼 구현 -->
	<update id="requestManage" parameterType="map">
		<if test="management=='승인'">
		update attendance_request SET attendance_request_management='승인됨'
		</if>
		<if test="management=='거절'">
		update attendance_request SET attendance_request_management='거절됨'
		</if>
		where attendance_request_no=#{attendance_request_no}
	</update>
	
	
</mapper>




